(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{206:function(t,s,a){"use strict";a.r(s);var n=a(28),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"电池热补丁指南-guide-for-battery-hotpatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#电池热补丁指南-guide-for-battery-hotpatch"}},[t._v("#")]),t._v(" 电池热补丁指南 (Guide for Battery Hotpatch)")]),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("blockquote",[a("p",[t._v("Last Updated : 4th April，2020 Saturday")])]),t._v(" "),a("p",[a("strong",[t._v("为什么笔记本电池需要制作补丁？")]),t._v("： macOS 使用的 ACPI 规范和解析器与常规 PC 不同，当电池驱动向 ACPI 底层发送指令时，如果读写了大于 8 位的寄存器，程序就会发生错误，导致无法获取到数据")]),t._v(" "),a("p",[a("strong",[t._v("实现原理")]),t._v("： 1. 将电池 ACPI 方法相关的超过 8 位的寄存器（位于 "),a("code",[t._v("Field")]),t._v(" 里面）拆分成若干个 8 位；2. 利用 ACPI 二进制更名使调用这些寄存器的 "),a("code",[t._v("Method")]),t._v("（函数方法）失效，并在新建的电池补丁中重新定义并修改代码实现电池信息的正确读取")]),t._v(" "),a("p",[a("strong",[t._v("技术要求")]),t._v("： 具备一定的 ACPI 基础（请参考 OC-little 中的总述部分），会十六进制进制转换和计算（用于计算偏移量和理解拆分函数）。")]),t._v(" "),a("p",[a("strong",[t._v("必备工具")]),t._v("： MaciASL、HEX Fiend、Hackintool（可选）。")]),t._v(" "),a("p",[a("strong",[t._v("文件准备")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("提取原始 "),a("code",[t._v("ACPI")]),t._v(" 文件：利用 "),a("code",[t._v("CLOVER")]),t._v(" 引导界面的 "),a("code",[t._v("F4")]),t._v(" 快捷键提取，文件将保存在 "),a("code",[t._v("ACPI/origin")]),t._v(" 里面，你会看到除了 "),a("code",[t._v("DSDT.aml")]),t._v(" 以外还有许多其它的 "),a("code",[t._v("ACPI")]),t._v(" 文件，通常我们需要用的就是 "),a("code",[t._v("DSDT.aml")]),t._v("，少数机器需要用到其它的一些 "),a("code",[t._v("SSDT-xxx.aml")]),t._v(" 文件。")]),t._v(" "),a("li",[t._v("下载参考示例文件及模板文件，链接："),a("a",{attrs:{href:"https://pan.baidu.com/s/1hMfz7ayJlRx_JwqqPiebHg",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://pan.baidu.com/s/1hMfz7ayJlRx_JwqqPiebHg"),a("OutboundLink")],1),t._v(" 提取码: 4wg7")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("大部分笔记本的 EC 代码在 "),a("code",[t._v("DSDT.aml")]),t._v(" 中，但也存在例外，如联想拯救者 14ISK/15ISK 的 EC 代码就在 "),a("code",[t._v("SSDT-1-CB-01.aml")]),t._v(" 中，本教程所使用的案例就是属于这种情况。")])]),t._v(" "),a("h2",{attrs:{id:"电池-acpi-方法和驱动原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#电池-acpi-方法和驱动原理"}},[t._v("#")]),t._v(" 电池 ACPI 方法和驱动原理")]),t._v(" "),a("p",[t._v("打开你的 "),a("code",[t._v("DSDT.aml")]),t._v("（本教程示例使用的为 "),a("code",[t._v("SSDT-1-CB-01.aml")]),t._v("），搜索 "),a("code",[t._v("PNP0C0A")]),t._v("，即可找到电池设备的定义和相关代码 ，且 BIOS 设备名称通常为 "),a("code",[t._v("BAT0")]),t._v(" 或者 "),a("code",[t._v("BAT1")]),t._v("，如下所示")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Device")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BAT0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_HID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("EisaId")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PNP0C0A"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Control Method Battery */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// _HID: Hardware ID")]),t._v("\n")])])]),a("p",[t._v("在电池 ACPI 代码中，通常具备以下方法，具体解释如下")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("_BIF")]),t._v(" (Battery Information) 用于获取电池基本信息，包括设计容量、电池代号、序列号、电池类型、OEM信息等")]),t._v(" "),a("li",[a("code",[t._v("_BIX")]),t._v(" (Battery Information Extended) 是 "),a("code",[t._v("_BIF")]),t._v(" 的拓展方法，电池驱动通常优先使用 "),a("code",[t._v("_BIX")]),t._v(" 方法获取电池信息，但是并不是所有笔记本的 ACPI 都具备该方法")]),t._v(" "),a("li",[a("code",[t._v("_BST")]),t._v(" (Battery Status) 用于获取电池实时状态，返回电池充电状态、剩余容量百分比和数值以及当前电池电压")]),t._v(" "),a("li",[a("code",[t._v("_BIP")]),t._v(" (Battery Trip Point) 用于设置电池低电量触发值，大部分电池不支持此功能，这种情况下系统会轮询 "),a("code",[t._v("_BST")]),t._v(" 中的剩余电量来判断是否处于警戒水平")])]),t._v(" "),a("p",[t._v("电池驱动原理：明确电池 ACPI 方法的功能后，我们能够知道电池驱动主要是通过操作 "),a("code",[t._v("_BIF")]),t._v(" 和 "),a("code",[t._v("_BST")]),t._v(" 这两个方法分别获取电池信息和电池状态的。")]),t._v(" "),a("blockquote",[a("p",[t._v("现在常用的电池驱动为 "),a("code",[t._v("ACPIBatteryManager")]),t._v(" 和 "),a("code",[t._v("SMCBatteryManager")]),t._v(" ，其中前者为 "),a("code",[t._v("Rehabman")]),t._v(" 大神开发的驱动，尽管已经不再更新，但是对于部分机器而言更适合使用。")])]),t._v(" "),a("h2",{attrs:{id:"acpi-寄存器映射原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#acpi-寄存器映射原理"}},[t._v("#")]),t._v(" ACPI 寄存器映射原理")]),t._v(" "),a("ul",[a("li",[t._v("名词解释：给已经分配好地址的有特定功能的内存单元取一个别名，这样的过程叫寄存器映射，这个别名就是我们常说的寄存器。")]),t._v(" "),a("li",[t._v("ACPI 实现方法：通过 "),a("code",[t._v("OperationRegion")]),t._v(" 指定作用域（即被映射区域），并在 "),a("code",[t._v("Field")]),t._v(" 中指定寄存器的偏移量、长度和名称，使其能够取出被映射区域中的指定数据")])]),t._v(" "),a("p",[t._v("打开你的 "),a("code",[t._v("DSDT.aml")]),t._v("（本教程示例中位于 "),a("code",[t._v("DSDT.aml")]),t._v(" ），搜索 "),a("code",[t._v("PNP0C09")]),t._v("，即可找到 EC 设备的路径，EC 设备的定义代码如下所示")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Scope")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_SB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("PCI0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Device")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("H_EC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_HID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("EisaId")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PNP0C09"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Embedded Controller Device */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// _HID: Hardware ID")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("不同机器的 EC 名称不一样，常见的为 "),a("code",[t._v("EC")]),t._v("、"),a("code",[t._v("EC0")]),t._v("、"),a("code",[t._v("H_EC")]),t._v("，戴尔机器通常使用 "),a("code",[t._v("ECDV")]),t._v("，而华为通常使用 "),a("code",[t._v("HWEC")]),t._v("，尽管如此，它们的 "),a("code",[t._v("_HID")]),t._v(" 都是 "),a("code",[t._v("PNP0C09")]),t._v("，这也就是为什么我们选择搜索这个关键词的原因")])]),t._v(" "),a("p",[t._v("上述示例代码中可以看出 EC 的 ACPI 路径为 "),a("code",[t._v("_SB.PCI0.LPCB.H_EC")]),t._v("，我们需要寻找位于该范围下 "),a("code",[t._v("OperationRegion")]),t._v(" 和 "),a("code",[t._v("Field")])]),t._v(" "),a("h3",{attrs:{id:"语法解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法解析"}},[t._v("#")]),t._v(" 语法解析")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("OperationRegion")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("RegionName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("RegionSpace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("RegionName： 操作区名称，EC 下的通常为 "),a("code",[t._v("ERAM")]),t._v("、"),a("code",[t._v("ECF2")]),t._v("、"),a("code",[t._v("ECF3")]),t._v("、"),a("code",[t._v("ECOR")]),t._v(" 等，并且有的机器可能不止一个。")]),t._v(" "),a("li",[t._v("RegionSpace： 操作空间，又称作用域，通常 EC 使用的作用域都是 "),a("code",[t._v("EmbeddedControl")]),t._v("，但是对于某些厂商，他们会选择将 EC 数据映射到系统内存中，因此作用域为 "),a("code",[t._v("SystemMemory")]),t._v("。")]),t._v(" "),a("li",[t._v("Offset： 作用域内每个 Field 的起始偏移量，EC 作用域的起始偏移量通常为 "),a("code",[t._v("Zero")]),t._v("，而系统内存作用域中用于映射 EC 数据的起始偏移量值由厂商决定")]),t._v(" "),a("li",[t._v("Length： 作用域内每个 Field 的最大长度。")])]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("RegionName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AccessType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("LockRule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UpdateRule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("FieldUnitList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("RegionName：对应 OperationRegion 的操作区名称。")]),t._v(" "),a("li",[t._v("AccessType：访问类型，EmbeddedControl 只能是 "),a("code",[t._v("ByteAcc")]),t._v("，代表按字节访问，因此偏移量是以字节来计算的，即每 8 位进 1 。")]),t._v(" "),a("li",[t._v("LockRule：锁定规则，与多线程相关，通常为 "),a("code",[t._v("NoLock")]),t._v("。")]),t._v(" "),a("li",[t._v("UpdateRule：更新规则，用来指定如何处理未产生改动的映射区域，通常为 "),a("code",[t._v("Preserve")]),t._v("，即维持原值。")]),t._v(" "),a("li",[t._v("FieldUnitList：字段单元列表，即寄存器列表，参考下方的示例")])]),t._v(" "),a("h3",{attrs:{id:"代码示例与偏移量计算方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码示例与偏移量计算方法"}},[t._v("#")]),t._v(" 代码示例与偏移量计算方法")]),t._v(" "),a("ul",[a("li",[t._v("Field 中每一行的元素由两部分组成，寄存器名称和寄存器长度（单位为 Bit）")]),t._v(" "),a("li",[t._v("Offset 用于指定一系列相邻寄存器的起始偏移量，计算机在访问时将通过第一个寄存器的 Offset 和后续寄存器的长度自动确认每个寄存器的偏移量，在后面的热补丁制作中这将是一大重点和难点")])]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("OperationRegion")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ECF3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("EmbeddedControl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Zero")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作用域为 EmbeddedControl，起始偏移量为0，最大长度 0xFF，即 255个字节")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ECF3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ByteAcc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Preserve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 按字节访问，即每 8 位进 1（1 Byte = 8 Bits）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VCMD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x01")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VDAT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x02")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VSTA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x03")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x04")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AIND")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x05")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ANUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x06")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("F1PW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x07")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1CH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x64 = 0x60 + 0x04 (32/8 = 4 to HEX)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B2CH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x68")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1MO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x6A")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B2MO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x6C")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1SN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x6E")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B2SN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x70")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1DT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x72")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B2DT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x74")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1CY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x76")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xC2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BARC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0xC4 = 0xC2 + 0x02 (16/8 = 2 to HEX)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BADC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0xC6")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BADV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0xC8")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BDCW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0xCA")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BDCL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0xCC")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BAFC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0xCE")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BAPR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0xD0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1CR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0xD2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1AR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0xD4")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"拆分函数原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拆分函数原理"}},[t._v("#")]),t._v(" 拆分函数原理")]),t._v(" "),a("ul",[a("li",[t._v("将所有大于 8 位的寄存器拆分为若干个 8 位寄存器，如 16 位拆分为 2 个 8 位，32 位拆分为 4 个 8 位，48 位拆分为 6 个 8 位，依次类推")]),t._v(" "),a("li",[t._v("寄存器本身的作用没有发生改变，改变的只是每个寄存器存取数据的大小")]),t._v(" "),a("li",[t._v("本节只是对拆分函数的原理进行解释，相关的应用示例请参见下一节-热补丁制作详解")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("在处理小于等于 32 位的寄存器时，需要在热补丁中的 EC 范围下创建一个新的操作区为拆分后的寄存器重新映射，具体将在后面的热补丁制作中详细解释")])]),t._v(" "),a("h3",{attrs:{id:"_16-位拆分读取-b1b2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-位拆分读取-b1b2"}},[t._v("#")]),t._v(" 16 位拆分读取 B1B2")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1B2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NotSerialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x08")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("参数解释")]),t._v("："),a("code",[t._v("Arg0")]),t._v(" 和 "),a("code",[t._v("Arg1")]),t._v(" 为你拆分后的两个8位寄存器，请按照 "),a("code",[t._v("Field")]),t._v(" 中的顺序填写参数，如果 "),a("code",[t._v("Arg1")]),t._v(" 在 "),a("code",[t._v("Field")]),t._v(" 中处在 "),a("code",[t._v("Arg0")]),t._v(" 前面，最后拼接的数据将是错误的")]),t._v(" "),a("p",[a("strong",[t._v("函数原理")]),t._v("：取 "),a("code",[t._v("Arg0")]),t._v(" 作为低 8 位，将 "),a("code",[t._v("Arg1")]),t._v(" 运用左移运算变成 16 位数据，此时它的的低 8 位全是 0 ，再运用或运算拼接成完整的 16 位数据")]),t._v(" "),a("h3",{attrs:{id:"_32-位拆分读取-b1b4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_32-位拆分读取-b1b4"}},[t._v("#")]),t._v(" 32 位拆分读取 B1B4")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1B4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NotSerialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x08")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x08")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x08")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("提示")]),t._v("：原理基本和 "),a("code",[t._v("B1B2")]),t._v(" 是一样的，唯一的区别就是此时变成将 4 个 8 位数据拼成 32 位数据了")]),t._v(" "),a("h3",{attrs:{id:"_16-位拆分写入-w16b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-位拆分写入-w16b"}},[t._v("#")]),t._v(" 16 位拆分写入 W16B")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("W16B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NotSerialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x08")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("参数解释")]),t._v("："),a("code",[t._v("Arg0")]),t._v(" 和 "),a("code",[t._v("Arg1")]),t._v(" 为你拆分的两个 8 位寄存器，"),a("code",[t._v("Arg2")]),t._v(" 为需要写入的数据或对象")]),t._v(" "),a("p",[a("strong",[t._v("函数原理")]),t._v("：将 "),a("code",[t._v("Arg2")]),t._v(" 直接赋值于 "),a("code",[t._v("Arg0")]),t._v("，此时计算机会将 "),a("code",[t._v("Arg2")]),t._v(" 的低 8 位给 "),a("code",[t._v("Arg0")]),t._v("；然后将 "),a("code",[t._v("Arg2")]),t._v(" 进行右移计算，将高 8 位数据变为低 8 位数据，同样直接赋值")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("对于大于 32 位的寄存器，我们不在新建的操作区里面进行拆分，而将它交给我们的自定义函数进行自动化处理，具体如下")])]),t._v(" "),a("h3",{attrs:{id:"_32-位以上读取-recb-re1b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_32-位以上读取-recb-re1b"}},[t._v("#")]),t._v(" 32 位以上读取 RECB RE1B")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("RE1B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NotSerialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("OperationRegion")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ERM2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("EmbeddedControl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("One")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作用域为 EmbeddedControl，Arg0 定义起始偏移量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ERM2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ByteAcc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NoLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Preserve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BYTE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定一个 8 位寄存器映射对应区域数据")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BYTE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回结果")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RECB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Serialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x07")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x03")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算 Arg1 除 8 并向上取整，位移运算更快")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Buffer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化作为返回值的 Buffer")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加上偏移量，即循环终止值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Zero")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义 Buffer 索引为 0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("While")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进行循环，循环次数为初次计算的 Arg1，自行理解")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEMP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("RE1B")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 RE1B 依次返回 8 位数据")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 偏移量自增")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 索引自增")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回最终结果")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("参数解释")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("对于 "),a("code",[t._v("RECB")]),t._v("，"),a("code",[t._v("Arg0")]),t._v(" 是原寄存器的偏移量（即 "),a("code",[t._v("Offset")]),t._v("），"),a("code",[t._v("Arg1")]),t._v(" 是原寄存器的长度")]),t._v(" "),a("li",[t._v("对于 "),a("code",[t._v("RE1B")]),t._v("，"),a("code",[t._v("Arg0")]),t._v(" 是偏移量")])]),t._v(" "),a("p",[a("strong",[t._v("函数原理")]),t._v("："),a("code",[t._v("RECB")]),t._v(" 通过 "),a("code",[t._v("Arg1")]),t._v(" 确定需要拆分的 8 位寄存器个数，通过 "),a("code",[t._v("While")]),t._v(" 循环及偏移量自增方法调用 "),a("code",[t._v("RE1B")]),t._v(" 从 "),a("code",[t._v("Field")]),t._v(" 中循环读取出每个 8 位数据，并拼接成原始寄存器定义长度的数据返回结果，具体见上述代码注释")]),t._v(" "),a("h3",{attrs:{id:"_32-位以上写入-wecb-we1b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_32-位以上写入-wecb-we1b"}},[t._v("#")]),t._v(" 32 位以上写入 WECB WE1B")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("WE1B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NotSerialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("OperationRegion")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ERM2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("EmbeddedControl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("One")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// EmbeddedControl 为 EC 作用域，Arg0 定义起始偏移量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ERM2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ByteAcc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NoLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Preserve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BYTE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定一个 8 位寄存器映射对应区域数据")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BYTE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 Arg1 通过寄存器间接写入对应区域")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WECB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Serialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x07")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x03")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算 Arg1 除 8 并向上取整，位移运算更快")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Buffer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化作为写入值的 Buffer")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEMP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将被写入的数据或对象赋值给 TEMP")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加上偏移量，即循环终止值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Zero")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义 Buffer 索引为 0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("While")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进行循环，循环次数为初次计算的 Arg1，自行理解")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("WE1B")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("DerefOf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEMP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 WE1B 依次写入 8 位数据")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 偏移量自增")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 索引自增")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("参数解释")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("对于 "),a("code",[t._v("WECB")]),t._v("，"),a("code",[t._v("Arg0")]),t._v(" 是原寄存器的偏移量（即 "),a("code",[t._v("Offset")]),t._v("），"),a("code",[t._v("Arg1")]),t._v(" 是原寄存器的长度，"),a("code",[t._v("Arg2")]),t._v(" 为被写入的数据或对象")]),t._v(" "),a("li",[t._v("对于 "),a("code",[t._v("WE1B")]),t._v("，"),a("code",[t._v("Arg0")]),t._v(" 是偏移量，"),a("code",[t._v("Arg1")]),t._v(" 为从 Buffer 取出的一个字节数据（即 8 位长度数据）")])]),t._v(" "),a("p",[a("strong",[t._v("函数原理")]),t._v("："),a("code",[t._v("WECB")]),t._v(" 通过 "),a("code",[t._v("Arg1")]),t._v(" 确定需要拆分的 8 位寄存器个数，创建 Buffer 对象将 "),a("code",[t._v("Arg2")]),t._v(" 转化为若干个字节的数据（一个字节等于 8 位），通过 "),a("code",[t._v("While")]),t._v(" 循环以及偏移量自增方法调用 "),a("code",[t._v("WE1B")]),t._v("，向 "),a("code",[t._v("Field")]),t._v(" 中循环写入每个 8 位数据，具体见上述代码注释")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("有些笔记本的 "),a("code",[t._v("EC")]),t._v(" 使用 "),a("code",[t._v("SystemMemory")]),t._v(" 作用域，则 "),a("code",[t._v("EC")]),t._v("、"),a("code",[t._v("RE1B")]),t._v(" 和 "),a("code",[t._v("WE1B")]),t._v(" 的 "),a("code",[t._v("Field")]),t._v(" 起始偏移量也需要加上原始定义数值，参照如下所示代码进行修改")])]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Scope")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_SB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("PCI0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("EC0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("OperationRegion")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ERAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("SystemMemory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFE708300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ERAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ByteAcc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Preserve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ···\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("RE1B")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NotSerialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFE708300")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("OperationRegion")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ERM2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("SystemMemory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Local0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("One")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"热补丁方法详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#热补丁方法详解"}},[t._v("#")]),t._v(" 热补丁方法详解")]),t._v(" "),a("blockquote",[a("p",[t._v("如果你有认真学习和理解拆分函数的原理，相信接下来的步骤将会进行起来非常顺利")])]),t._v(" "),a("h3",{attrs:{id:"搜索寄存器，创建补丁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搜索寄存器，创建补丁"}},[t._v("#")]),t._v(" 搜索寄存器，创建补丁")]),t._v(" "),a("p",[t._v("在 ACPI 寄存器映射原理中，我已经介绍了如何确认 EC 路径以及各拆分函数的原理和语法解释，接下来我们需要在 EC 下寻找所有的 "),a("code",[t._v("OperationRegion")]),t._v(" 和 "),a("code",[t._v("Field")]),t._v("，并从中筛选出超过 8 位的寄存器")]),t._v(" "),a("ul",[a("li",[t._v("根据每个 "),a("code",[t._v("OperationRegion")]),t._v(" 的操作区名称找到所有对应的 "),a("code",[t._v("Field")]),t._v("，筛选超过 8 位的寄存器，并检查是否存在被调用的情况。")]),t._v(" "),a("li",[t._v("若存在被调用的情况，对应源代码的情况，按顺序排列需要拆分的寄存器（当存在多个 "),a("code",[t._v("Field")]),t._v(" 里面的寄存器需要拆分时请分组排列，便于后续处理），并注明它们的长度。")]),t._v(" "),a("li",[t._v("计算它们的偏移量，如果是几个连续的寄存器，只需要计算第一个的偏移量，因为相邻的寄存器都是按顺序进行操作的，不需要额外计算。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("如果某个寄存器被全局定义过，例如在根路径（"),a("code",[t._v("\\")]),t._v("）或者（"),a("code",[t._v("\\_SB")]),t._v("）路径下的 "),a("code",[t._v("Field")]),t._v(" 里面有相同名字的寄存器，那么当你搜索该寄存器被调用情况时应注意区分此处的调用是不是 EC 下的这一个，如果不是，说明此处调用使用的是全局定义，对 EC 没有影响，不需要记录下来。")])]),t._v(" "),a("p",[t._v("对照我们的示例文件，整理记录如下")]),t._v(" "),a("p",[a("strong",[t._v("16位")]),t._v("： "),a("code",[t._v("B1DT")]),t._v("，"),a("code",[t._v("B1CY")]),t._v("，"),a("code",[t._v("RTEP")]),t._v("，"),a("code",[t._v("BET2")]),t._v("，"),a("code",[t._v("B1TM")]),t._v("，"),a("code",[t._v("BAPV")]),t._v("，"),a("code",[t._v("BARC")]),t._v("，"),a("code",[t._v("BADC")]),t._v("，"),a("code",[t._v("BADV")]),t._v("，"),a("code",[t._v("BAFC")]),t._v("，"),a("code",[t._v("B1CR")])]),t._v(" "),a("p",[a("strong",[t._v("32位")]),t._v("： "),a("code",[t._v("B1CH")])]),t._v(" "),a("p",[a("strong",[t._v("大于32位")]),t._v("： "),a("code",[t._v("SMD0, 256")]),t._v("，"),a("code",[t._v("B1MA, 64")]),t._v("，"),a("code",[t._v("B2MA, 64")])]),t._v(" "),a("p",[a("strong",[t._v("需要修改的 Method")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("_SB.PCI0.LPCB.H_EC.BAT1._BIF")])]),t._v(" "),a("li",[a("code",[t._v("_SB.PCI0.LPCB.H_EC.BAT1._BST")])]),t._v(" "),a("li",[a("code",[t._v("_SB.PCI0.LPCB.H_EC.VPC0.MHPF")])]),t._v(" "),a("li",[a("code",[t._v("_SB.PCI0.LPCB.H_EC.VPC0.SMTF")])]),t._v(" "),a("li",[a("code",[t._v("_SB.PCI0.LPCB.H_EC.VPC0.GSBI")])]),t._v(" "),a("li",[a("code",[t._v("_SB.PCI0.LPCB.H_EC.VPC0.GBID")])])]),t._v(" "),a("p",[t._v("打开模板文件 "),a("code",[t._v("SSDT-BATT.dsl")]),t._v("，在 EC 路径的 "),a("code",[t._v("Scope")]),t._v(" 下（请务必修改为自己的 EC 设备路径），创建 "),a("code",[t._v("OperationRegion")]),t._v(" 和 "),a("code",[t._v("Field")]),t._v("，将已经拆分命名并计算好偏移量的寄存器填入代码中，示例如下：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("OperationRegion")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("XCF3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("EmbeddedControl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Zero")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Field")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("XCF3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ByteAcc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NoLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Preserve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BC0H")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BC1H")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BC2H")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BC3H")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x70")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BDT0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BDT1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x74")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BCY0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BCY1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xAA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("RTP0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("RTP1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B0ET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1ET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xB6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BTM0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BTM1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B0PV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1PV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xC2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BAC0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BAC1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BDC0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BDC1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BDV0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BDV1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xCC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BFC0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BFC1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xD0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BCR0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BCR1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("上述代码中，为了避免与原始 "),a("code",[t._v("ACPI")]),t._v(" 中的操作区映射定义发生冲突，我们创建的操作区名称为 "),a("code",[t._v("XCF3")]),t._v("，区别于原始 "),a("code",[t._v("ACPI")]),t._v(" 中的 "),a("code",[t._v("ECF3")])])]),t._v(" "),a("p",[a("strong",[t._v("当然，我们对寄存器的拆分也要注意避免重复，比如我把 "),a("code",[t._v("BADC")]),t._v(" 拆分为 "),a("code",[t._v("BAC0")]),t._v(" 和 "),a("code",[t._v("BAC1")]),t._v("，应该在原始 "),a("code",[t._v("ACPI")]),t._v(" 中搜索是否存在同样名字的寄存器，最佳方法是直接在 "),a("code",[t._v("orgin")]),t._v(" 目录下打开终端使用 "),a("code",[t._v("grep")]),t._v(" 命令搜索，方便快捷。")])]),t._v(" "),a("h3",{attrs:{id:"对调用的寄存器进行拆分处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对调用的寄存器进行拆分处理"}},[t._v("#")]),t._v(" 对调用的寄存器进行拆分处理")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("根据我们之前记录的路径将需要修改的 "),a("code",[t._v("Method")]),t._v(" 代码完整复制过来，注意大括号千万别复制错了，不然后面排查错误会很麻烦。")])]),t._v(" "),a("p",[a("strong",[t._v("修改 16 位以上寄存器拆分读取")]),t._v("：")]),t._v(" "),a("p",[a("strong",[t._v("语法")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1B2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("Arg0")]),t._v("、"),a("code",[t._v("Arg1")]),t._v(" 为你拆分后的两个 8 位寄存器名字，注意顺序。")])]),t._v(" "),a("p",[a("strong",[t._v("示例")]),t._v("：")]),t._v(" "),a("p",[t._v("原始语句：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("If")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("PCI0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("EC0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BADC")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0C80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("一个比较判断语句，属于读取操作，我将 "),a("code",[t._v("BADC")]),t._v(" 拆分为 "),a("code",[t._v("ADC0")]),t._v(" 和 "),a("code",[t._v("ADC1")]),t._v("，并进行如下修改：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("If")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1B2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("PCI0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("EC0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ADC0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("PCI0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("EC0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ADC1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0C80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("修改 16 位寄存器拆分写入")]),t._v("：")]),t._v(" "),a("p",[a("strong",[t._v("语法")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("W16B")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1，Arg2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("Arg0")]),t._v("、"),a("code",[t._v("Arg1")]),t._v(" 为你拆分后的两个 8 位寄存器名字，注意顺序。")]),t._v(" "),a("li",[a("code",[t._v("Arg2")]),t._v(" 为被写入的数值或数据对象。")])]),t._v(" "),a("p",[a("strong",[t._v("示例")]),t._v("：")]),t._v(" "),a("p",[t._v("原始语句：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("SMW0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg3")]),t._v("\n")])])]),a("p",[t._v("普通的赋值语句，属于写入数据操作，我将 "),a("code",[t._v("SMW0")]),t._v(" 拆分为 "),a("code",[t._v("MW00")]),t._v(" 和 "),a("code",[t._v("MW01")]),t._v("，并进行如下修改：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("W16B")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("MW00")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("MW01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("修改 32 位寄存器拆分读取")]),t._v("：")]),t._v(" "),a("p",[a("strong",[t._v("语法")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1B4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("Arg0")]),t._v("、"),a("code",[t._v("Arg1")]),t._v("、"),a("code",[t._v("Arg2")]),t._v(" 和 "),a("code",[t._v("Arg3")]),t._v(" 为你拆分后的 4 个 8 位寄存器名字，注意顺序。")])]),t._v(" "),a("p",[a("strong",[t._v("示例")]),t._v("：")]),t._v(" "),a("p",[t._v("原始语句：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("If")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1CH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0050694C")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("修改结果：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("If")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1B4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BC0H")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BC1H")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BC2H")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BC3H")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0050694C")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("修改 32 位以上寄存器读取")]),t._v("：")]),t._v(" "),a("p",[a("strong",[t._v("语法")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RECB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Offset 为原寄存器的偏移量")]),t._v(" "),a("li",[t._v("Length 为原寄存器的长度")])]),t._v(" "),a("p",[a("strong",[t._v("示例")]),t._v("：")]),t._v(" "),a("p",[t._v("原始定义：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x8F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1MA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("调用语句：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IFMN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1MA")]),t._v("\n")])])]),a("p",[t._v("修改结果：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IFMN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RECB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x8F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("修改 32 位以上寄存器写入")]),t._v("：")]),t._v(" "),a("p",[a("strong",[t._v("语法")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WECB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Offset 为原寄存器的偏移量")]),t._v(" "),a("li",[t._v("Length 为寄存器的长度")]),t._v(" "),a("li",[t._v("Obj 为被写入的值或者数据对象")])]),t._v(" "),a("p",[a("strong",[t._v("示例")]),t._v("：")]),t._v(" "),a("p",[t._v("原始定义：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Offset")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SMPR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SMST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SMAD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SMCM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("SMD0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("调用语句：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("SMD0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("FB4")]),t._v("\n")])])]),a("p",[t._v("修改结果：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WECB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x1C")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("FB4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0x1C=0x18+0x04")]),t._v("\n")])])]),a("h3",{attrs:{id:"添加-osi-判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加-osi-判断"}},[t._v("#")]),t._v(" 添加 _OSI 判断")]),t._v(" "),a("blockquote",[a("p",[t._v("OpenCore 在引导时对于任何系统都是加载的同一套 ACPI，我们应确保我们的补丁只对 macOS 生效，此时我们需要通过添加 "),a("code",[t._v('If(_OSI("Darwin")){}')]),t._v(" 判断的方法使其在其他系统下不生效，避免 OC 在引导其它系统时出现不必要的 ACPI 错误。")])]),t._v(" "),a("p",[t._v("在已经完成的补丁文件中，在每一个 "),a("code",[t._v("Method")]),t._v(" 的开始部分加上 "),a("code",[t._v("_OSI")]),t._v(" 系统判断并在结尾处回调原始方法，示例如下：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_BIF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NotSerialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// _BIF: Battery Information")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("If")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_OSI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Darwin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XBIF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("以上述代码为例 ，"),a("code",[t._v("Else")]),t._v(" 后面的代码为回调原始方法，如果原始方法没有出现 "),a("code",[t._v("Return")]),t._v(" 语句，则可直接以 "),a("code",[t._v("XBIF()")]),t._v(" 的方式回调；如果原始方法的代码中出现了 "),a("code",[t._v("Return")]),t._v(" 语句，则在回调时也需要以 "),a("code",[t._v("Return")]),t._v(" 形式回调原方法。")]),t._v(" "),a("p",[t._v("如果原始方法带参数则应该在回调时将参数传递过去，如下代码：")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SMTF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NotSerialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("If")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_OSI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Darwin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("If")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Zero")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1B2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B0ET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("B1ET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("If")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("One")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Zero")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Zero")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XMTF")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Arg0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("注意：ASL 语言中方法的参数是从 "),a("code",[t._v("Arg0")]),t._v(" 开始的。")])]),t._v(" "),a("h3",{attrs:{id:"添加外部引用声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加外部引用声明"}},[t._v("#")]),t._v(" 添加外部引用声明")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("在确认修改结束后，我们点击编译会报告许多对象找不到的错误，一般来说，这些错误是由于我们复制过来的代码引用了原始 ACPI 中的一些对象但在 SSDT 中缺少引用声明导致的。在这里我们只需要搜索它们在原始 ACPI 中的定义路径和类型，并在补丁文件头部（介于 "),a("code",[t._v("DefinitionBlock")]),t._v(" 和后面的 "),a("code",[t._v("Method")]),t._v(" 代码之间）添加上引用声明即可解决大多数编译错误。")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("添加外部引用声明时应注意路径和类型应严格对应，参照下列示例")])]),t._v(" "),a("p",[a("strong",[t._v("Device")]),t._v("：原始 ACPI 定义示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Scope")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_SB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("PCI0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Device")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("H_EC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n")])])]),a("p",[t._v("补丁中添加的代码示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("External")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_SB_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("PCI0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("H_EC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("DeviceObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Method")]),t._v("：原始 ACPI 定义示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_STA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NotSerialized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* _STA: Status */")]),t._v("\n")])])]),a("p",[t._v("补丁中添加的代码示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("External")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_SB_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BAT0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_STA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("MethodObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Mutex")]),t._v("：原始 ACPI 定义示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Mutex")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BATM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x07")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("补丁中添加的代码示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("External")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_SB_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("PCI0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("H_EC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BATM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("MutexObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("FieldUnit")]),t._v("：原始 ACPI 定义示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BCNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("补丁中添加的代码示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("External")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_SB_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("PCI0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("H_EC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BCNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("FieldUnitObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Integer")]),t._v("：原始 ACPI 定义示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ECA2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Zero")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("补丁中添加的代码示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("External")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_SB_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("PCI0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("H_EC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ECA2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("IntObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Package")]),t._v("：原始 ACPI 定义示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PBIF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Package")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0D")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("One")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFFFFFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFFFFFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("One")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFFFFFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x96")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x19")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BAT0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("补丁中添加的代码示例")]),t._v(" "),a("div",{staticClass:"language-Swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("External")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("_SB_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("BAT0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PBIF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("PkgObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"更名-method-使其失效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更名-method-使其失效"}},[t._v("#")]),t._v(" 更名 Method 使其失效")]),t._v(" "),a("blockquote",[a("p",[t._v("Hotpatch 的原理是通过 ACPI 二进制更名使原来 ACPI 中的  Method失效，并在新的 SSDT 补丁中重新定义它，以方便我们直接修改里面的代码。")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("用 MaciASL 查看补丁中修改的 "),a("code",[t._v("Method")]),t._v("，确认它们的参数个数以及是否可序列化（"),a("code",[t._v("NotSerialized")]),t._v(" 和 "),a("code",[t._v("Serialized")]),t._v("）。")])]),t._v(" "),a("li",[a("p",[t._v("用 HEX Fiend 打开 "),a("code",[t._v("DSDT.aml")]),t._v("（本教程的示例是 "),a("code",[t._v("SSDT-1-CB-01.aml")]),t._v("）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("同时按住 "),a("code",[t._v("command")]),t._v(" + "),a("code",[t._v("F")]),t._v(" 调出搜索框，切换到 "),a("code",[t._v("Text")]),t._v(" 模式，输入要更名的 Method 名字。")])]),t._v(" "),a("li",[a("p",[t._v("切换到 "),a("code",[t._v("HEX")]),t._v(" 模式，此时刚刚输入的名字已经变成了十六进制代码，接下来我们需要在后面加上方法规则代码（参数个数+是否可序列   化），对应关系如下：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Method(xxxx,a,N)")]),t._v(" --\x3e "),a("code",[t._v("xxxx")]),t._v(" 的十六进制代码 + "),a("code",[t._v("a")]),t._v(" 的十六进制代码，最后两位范围为 "),a("code",[t._v("00")]),t._v(" - "),a("code",[t._v("07")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Method(xxxx,b,S)")]),t._v(" --\x3e "),a("code",[t._v("xxxx")]),t._v(" 的十六进制代码 + ("),a("code",[t._v("b+8")]),t._v(") 的十六进制代码，最后两位范围为 "),a("code",[t._v("08")]),t._v(" - "),a("code",[t._v("0F")])])]),t._v(" "),a("li",[a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Method (MHPF,1,N) --\x3e `4D485046 01`\nMethod (BTST,2,S) --\x3e `42545354 0A`\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("在输入上述方法定义的完整十六进制代码后，按 Next 或 Previous 进行全文搜索，一般只会出现一个结果，该结果就是我们在 MaciASL 编辑器里面看到的原始方法定义。")])]),t._v(" "),a("li",[a("p",[t._v("我们需要该方法更名为一个未被利用的名称，通常习惯以 "),a("code",[t._v("X")]),t._v(" 替换第一个字母，只要不出现重复定义即可。")])]),t._v(" "),a("li",[a("p",[t._v("切换回 "),a("code",[t._v("Text")]),t._v(" 模式，将第一位改为 "),a("code",[t._v("X")]),t._v("，并再次切换为 "),a("code",[t._v("HEX")]),t._v(" 模式，可以发现 "),a("code",[t._v("X")]),t._v(" 对应的十六进制代码为 "),a("code",[t._v("58")]),t._v("，以后我们可以凭经验直接在 "),a("code",[t._v("HEX")]),t._v(" 模式下修改。再次搜索，如果没有结果，证明该方法名没有被利用过，可以用于更名。")])]),t._v(" "),a("li",[a("p",[t._v("当然如果要更名的 "),a("code",[t._v("Method")]),t._v(" 里面存着多个除了第一位不一样其它三位一样情况时，也很容易应对，分别更名为 "),a("code",[t._v("X")]),t._v(" 开头的和 "),a("code",[t._v("Y")]),t._v(" 开头的就行，只要不出现重名的情况都是可以的，也就是说除了要避免与现有 "),a("code",[t._v("Method")]),t._v(" 重名以外，也要避免更名后出现重名的情况。")])])])]),t._v(" "),a("li",[a("p",[t._v("例如 "),a("code",[t._v("BTST,2,S")]),t._v(" 更名为 "),a("code",[t._v("XTST,2,S")]),t._v(" 最终 config 的更名应填：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment      change BTST,2,S to XTST\nFind         42545354 0A\nReplace      58545354 0A\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"检查mutex是否已经置0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查mutex是否已经置0"}},[t._v("#")]),t._v(" 检查Mutex是否已经置0")]),t._v(" "),a("p",[t._v("引用Rehabman大神的原话：")]),t._v(" "),a("blockquote",[a("p",[t._v("Some DSDTs use Mutex objects with non-zero a SyncLevel.  Evidently, OS X has some difficulty with this part of the ACPI spec, either that or the DSDTs are, in fact, codec incorrectly and Windows is ignoring it.")]),t._v(" "),a("p",[t._v("The common result of a non-zero SyncLevel is failure of methods at the point of Acquire on the mutext in question.  This can result in strange behavior, failed battery status, or other issues.")])]),t._v(" "),a("p",[t._v("结合ACPI规范，我的理解如下（若用语有误请指出）：")]),t._v(" "),a("blockquote",[a("p",[t._v("有些机器的 "),a("code",[t._v("Mutex")]),t._v("（互斥体，用于处理多线程同步）对象的 "),a("code",[t._v("SyncLevel")]),t._v("（同步等级）不为 "),a("code",[t._v("0")]),t._v(" ，而这种情况下 macOS 无法正常执行多线程同步，造成的结果是电池状态等可能无法获取（如果电池相关的 Method 处于不同的同步等级，在 macOS 下会造成数据获取的异常，出现 0% 的情况），此时应打上 "),a("code",[t._v("Mutex")]),t._v(" 置 "),a("code",[t._v("0")]),t._v(" 补丁来解决")]),t._v(" "),a("p",[t._v("目前所知道的绝大多数笔记本 ACPI 的 "),a("code",[t._v("Mutex")]),t._v(" 都是默认置 "),a("code",[t._v("0")]),t._v(" 的，但是对于一些联想品牌的笔记本，它们往往有几个 "),a("code",[t._v("Mutex")]),t._v(" 的 "),a("code",[t._v("SyncLevel")]),t._v(" 并不是 "),a("code",[t._v("0")]),t._v("，我们在完成电池补丁后应检查 "),a("code",[t._v("Mutex")]),t._v(" 是否属于这种情况。OpenCore 没有 CLOVER 那样方便的补丁选项能直接将所有 "),a("code",[t._v("Mutex")]),t._v(" 对象的同步等级修改为 "),a("code",[t._v("0")]),t._v("，这里我们需要利用 ACPI 二进制更名的方法实现置 "),a("code",[t._v("0")]),t._v("。")])]),t._v(" "),a("p",[a("strong",[t._v("具体方法如下")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在当前使用的 DSDT 文件里搜索 "),a("code",[t._v("Mutex")]),t._v("，看出现的几个对象的 "),a("code",[t._v("SyncLevel")]),t._v(" 是否为 "),a("code",[t._v("0")])])]),t._v(" "),a("li",[a("p",[t._v("以 "),a("code",[t._v("Mutex (BATM, 0x07)")]),t._v(" 为例，先转换BATM为十六进制代码，得到 "),a("code",[t._v("42 41 54 4D")])])]),t._v(" "),a("li",[a("p",[t._v("在前后加上完整定义的十六进制代码，最终得到 "),a("code",[t._v("01 42 41 54 4D 07")])])]),t._v(" "),a("li",[a("p",[t._v("其中 "),a("code",[t._v("01")]),t._v(" 代表 "),a("code",[t._v("Mutex")]),t._v("; "),a("code",[t._v("07")]),t._v(" 则代表 "),a("code",[t._v("SyncLevel")]),t._v(" 的 "),a("code",[t._v("0x07")]),t._v("，")])]),t._v(" "),a("li",[a("p",[t._v("我们的目的是使 "),a("code",[t._v("Mutex")]),t._v(" 对象置 "),a("code",[t._v("0")]),t._v("，所以 config 的更名应填")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment       Set Mutex BATM, 0x07 to 0x0\nFind          01 42 41 54 4D 07\nRepalce       01 42 41 54 4D 00\n")])])])])]),t._v(" "),a("p",[t._v("其它 "),a("code",[t._v("Mutex")]),t._v(" 对象按照同样的方法处理即可。")]),t._v(" "),a("h2",{attrs:{id:"acpi-特殊处理方案集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#acpi-特殊处理方案集合"}},[t._v("#")]),t._v(" ACPI 特殊处理方案集合")]),t._v(" "),a("h3",{attrs:{id:"惠普笔记本-acel-设备禁止"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#惠普笔记本-acel-设备禁止"}},[t._v("#")]),t._v(" 惠普笔记本 ACEL 设备禁止")]),t._v(" "),a("p",[a("strong",[t._v("问题描述")]),t._v("：由于部分惠普笔记本配备机械硬盘防护传感器，该设备实际为一个加速度传感器，即便没有驱动也能保持运行，持续向 EC 中读写数据，导致电池状态刷新异常")]),t._v(" "),a("p",[a("strong",[t._v("解决方案")]),t._v("：在 Windows 下已经确认该设备 ACPI 名称为 ACEL，通过 ACPI 更名其 "),a("code",[t._v("_STA")]),t._v("，并在热补丁中要求 macOS 下禁止该设备")]),t._v(" "),a("h3",{attrs:{id:"ecrd-和-ecwt-读写控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecrd-和-ecwt-读写控制"}},[t._v("#")]),t._v(" ECRD 和 ECWT 读写控制")]),t._v(" "),a("p",[a("strong",[t._v("问题描述")]),t._v("：部分机器的 ACPI 对于 EC 作用域下的寄存器读写有严格控制，有时我们需要稍微修改一下其中的代码解除一些限制")]),t._v(" "),a("p",[a("strong",[t._v("解决方案")]),t._v("：目前使用的方法未在多数机器上验证，暂时不给出相关方案，请等待后续更新")]),t._v(" "),a("h2",{attrs:{id:"双电池系统解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双电池系统解决方案"}},[t._v("#")]),t._v(" 双电池系统解决方案")]),t._v(" "),a("p",[t._v("双电池系统通常分为两种情况：")]),t._v(" "),a("ul",[a("li",[t._v("第一种：只安装了一块电池，并且也没打算再装一块，这种最容易解决，利用 ACPI 更名另一块电池设备的 ACPI _STA 方法；")]),t._v(" "),a("li",[t._v("第二组：安装了两块电池，并希望 macOS 下都可使用。这种情况需要更改两块电池设备的 ACPI _HID 名称使其保持运行的情况下不被电池驱动识别，同时新建一个 "),a("code",[t._v("BATC")]),t._v(" 设备用于合并计算两块电池的信息和状态，代替原来两块电池设备的代码为驱动提供信息")])]),t._v(" "),a("p",[t._v("参考链接：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/RehabMan/OS-X-ACPI-Battery-Driver",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rehabman's ACPI Battery Driver"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/daliansky/OC-little/tree/master/08-%E7%94%B5%E6%B1%A0%E8%A1%A5%E4%B8%81/08-1-Thinkpad",target:"_blank",rel:"noopener noreferrer"}},[t._v("OC-little ThinkPad双电池系统处理"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("h3",{attrs:{id:"一些经验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些经验"}},[t._v("#")]),t._v(" 一些经验")]),t._v(" "),a("ul",[a("li",[t._v("对于没有用到的工具方法，可以从补丁中移除，减少补丁代码，例如 "),a("code",[t._v("W16B")]),t._v(" 和 "),a("code",[t._v("WECB(WE1B)")]),t._v(" 这类写入操作有些机器的 ACPI 不需要。")]),t._v(" "),a("li",[t._v("大多数调用的情况都是属于读取操作，而写入操作很少。")]),t._v(" "),a("li",[t._v("根据经验，同一个超过 32 位的字段单元通常只会被调用一次，尽管有些机器存在2次调用的情况，但分析代码可知，通常这两种调用不会同时进行（常见情况为当既有读取又有写入时，两种操作被控制语句限制只执行其中一种）。")]),t._v(" "),a("li",[t._v("根据经验观察，并非所有涉及到字段单元拆分的 "),a("code",[t._v("Method")]),t._v(" 都需要修改代码，事实上，有些 "),a("code",[t._v("Method")]),t._v(" 和电池没有太大的关系，即使不对其调用的超过 8 位字段单元进行拆分也没有影响，但是为了保险起见我们还是选择了全部进行拆分修改。如果你能深入了解电池 ACPI 的读写原理，明确真正和电池相关的 "),a("code",[t._v("Method")]),t._v("，你能很轻松地从你的补丁中移除一些无关紧要的代码修改和二进制更名，最简化你的补丁，关于这方面的内容，需要一定的经验且较为深入的理解 ACPI 才能做到。")]),t._v(" "),a("li",[t._v("极少数笔记本可能根本就搜不到 "),a("code",[t._v("PNP0C09")]),t._v("（"),a("code",[t._v("EC")]),t._v(" 的 "),a("code",[t._v("_HID")]),t._v("），这种情况下我们只能搜 "),a("code",[t._v("PNP0C0A")]),t._v("（电池的 "),a("code",[t._v("_HID")]),t._v("），并根据 "),a("code",[t._v("_BIF")]),t._v("、"),a("code",[t._v("_BST")]),t._v("、"),a("code",[t._v("_BIX")]),t._v(" 等电池 ACPI 方法入手，分析它调用的寄存器和函数，最终找到所有电池相关寄存器所在的 "),a("code",[t._v("Field")]),t._v(" 内的定义（即偏移量和长度），然后根据本教程的方法进行修改，通常这类机器的 ACPI 使用的 "),a("code",[t._v("SystemMemory")]),t._v(" 作用域，请务必注意起始偏移量的修正，寄存器拆分函数结尾处已经提到。")])]),t._v(" "),a("h3",{attrs:{id:"如何排查错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何排查错误"}},[t._v("#")]),t._v(" 如何排查错误")]),t._v(" "),a("ul",[a("li",[t._v("当我们完成了所有的电池补丁后如果发现电池还是未能正确显示怎么办呢？\n"),a("ul",[a("li",[t._v("这种情况通常是由于我们在制作补丁没有充分考虑重名情况导致的。")]),t._v(" "),a("li",[t._v("打开 Hackintool，切换到日志选项卡，选择系统，点击下方的刷新按钮生成，搜索 "),a("code",[t._v("ACPI Error")]),t._v("，看是否出现了和 "),a("code",[t._v("EC")]),t._v(" 相关的错误，如果有，那么极有可能是出现了重复定义造成的，这时候我们需要修改我们电池补丁中相关对象的名称避免重名。")])])]),t._v(" "),a("li",[t._v("如果出现电池在拔下外置电源的情况下变红该怎么办？\n"),a("ul",[a("li",[t._v("这种情况同样需要排查 "),a("code",[t._v("ACPI Error")]),t._v("，通常这是由于其它 SSDT 缺失或者冲突造成 AC 适配器代码部分发生了异常，利用终端的 "),a("code",[t._v("grep")]),t._v(" 命令在整个 "),a("code",[t._v("origin")]),t._v(" 目录进行搜索一般能准确定位到问题，具体方法这里不作介绍，相对来说还是比较简单的。")])])])]),t._v(" "),a("h2",{attrs:{id:"参考来源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考来源"}},[t._v("#")]),t._v(" 参考来源")]),t._v(" "),a("ul",[a("li",[t._v("Guide using clover to hotpatch acpi and battery status hotpatch "),a("a",{attrs:{href:"https://github.com/rehabman",target:"_blank",rel:"noopener noreferrer"}},[t._v("@Rehabman"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("tonymacx86, PCBeta 远景黑苹果论坛, 黑果小兵的部落阁")]),t._v(" "),a("li",[t._v("ACPI Specification 6.1")])])])}),[],!1,null,null,null);s.default=e.exports}}]);